"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Switch } from "@/components/ui/switch"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Badge } from "@/components/ui/badge"
import { Separator } from "@/components/ui/separator"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Navigation } from "@/components/shared/Navigation"
import { ReputationCard } from "@/components/community/ReputationCard"
import { ContributionPoints, UserBadge } from "@/lib/contribution-system"
import { 
  User, 
  Bell, 
  Shield, 
  Globe, 
  Smartphone, 
  Eye, 
  Lock,
  Camera,
  MapPin,
  Clock,
  Star,
  Crown,
  Award,
  Users,
  Coffee,
  Heart,
  Info,
  AlertTriangle,
  CheckCircle,
  X,
  Settings as SettingsIcon
} from "lucide-react"

// Current user's community data
const currentUserPoints: ContributionPoints = {
  total: 1456,
  breakdown: {
    reviews: 89,
    photos: 150,
    tutorials: 300,
    mentoring: 600,
    verification: 120,
    moderation: 97,
    events: 100,
    localIntelligence: 0
  }
}

const currentUserBadges: UserBadge[] = [
  {
    id: "1",
    name: "Good Neighbor",
    nameVi: "Ng∆∞·ªùi h√†ng x√≥m t·ªët",
    description: "Active in local neighborhood",
    descriptionVi: "T√≠ch c·ª±c trong khu ph·ªë ƒë·ªãa ph∆∞∆°ng",
    icon: "üè†",
    earnedAt: new Date("2023-12-10"),
    category: "vƒÉn_h√≥a",
    rarity: "ph·ªï_bi·∫øn"
  },
  {
    id: "2",
    name: "Community Teacher",
    nameVi: "Th·∫ßy/C√¥ c·ªông ƒë·ªìng",
    description: "Teaches skills to others",
    descriptionVi: "D·∫°y k·ªπ nƒÉng cho ng∆∞·ªùi kh√°c",
    icon: "üìö",
    earnedAt: new Date("2024-01-15"),
    category: "vƒÉn_h√≥a",
    rarity: "hi·∫øm"
  }
]

export default function SettingsPage() {
  const [profileData, setProfileData] = useState({
    name: "L√™ Th·ªã H∆∞∆°ng",
    email: "huong.le@email.com",
    phone: "+84 912 345 678",
    ward: "Ph∆∞·ªùng B·∫øn Ngh√©",
    district: "Qu·∫≠n 1", 
    city: "TP.HCM",
    exactAddress: "",
    bio: "Gi√°o vi√™n Piano v·ªõi 8 nƒÉm kinh nghi·ªám. Chuy√™n d·∫°y tr·∫ª em v√† ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu. Y√™u th√≠ch chia s·∫ª √¢m nh·∫°c v·ªõi c·ªông ƒë·ªìng."
  })

  const [notifications, setNotifications] = useState({
    emailNotifications: true,
    pushNotifications: true,
    smsNotifications: false,
    marketingEmails: false,
    newMessages: true,
    serviceRequests: true,
    communityEvents: true,
    emergencyAlerts: true,
    localIntelligence: true
  })

  const [privacy, setPrivacy] = useState({
    profileVisibility: true,
    showWardLocation: true,
    allowExactLocation: false,
    showPhone: false,
    showEmail: false,
    onlineStatus: true,
    communityVerification: true,
    antiCommercialProfile: true
  })

  const [communitySettings, setCommunitySettings] = useState({
    participateInEvents: true,
    shareLocalIntelligence: true,
    mentorNewcomers: true,
    emergencyResponse: false,
    culturalActivities: true,
    antiCommercialCommitment: true
  })

  const [locationPrivacy, setLocationPrivacy] = useState({
    defaultLevel: 'public_ward',
    autoShareRadius: 500,
    temporarySharing: true,
    neighborVerification: true
  })

  return (
    <div className="min-h-screen bg-slate-100">
      <Navigation />
      
      <div className="max-w-6xl mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 flex items-center gap-3">
            <SettingsIcon className="w-8 h-8 text-emerald-600" />
            C√†i ƒë·∫∑t t√†i kho·∫£n
          </h1>
          <p className="text-gray-600 mt-2">Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n, quy·ªÅn ri√™ng t∆∞ v√† tham gia c·ªông ƒë·ªìng</p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          
          {/* Left Column - Profile & Community */}
          <div className="lg:col-span-2 space-y-6">
            
            {/* Profile Settings */}
            <Card>
              <CardHeader className="flex flex-row items-center space-y-0 space-x-4">
                <div className="flex items-center space-x-2">
                  <User className="w-5 h-5 text-emerald-600" />
                  <div>
                    <CardTitle>Th√¥ng tin c√° nh√¢n</CardTitle>
                    <CardDescription>C·∫≠p nh·∫≠t th√¥ng tin h·ªì s∆° v√† k·ªπ nƒÉng c·ªßa b·∫°n</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="flex items-center space-x-6">
                  <div className="relative">
                    <Avatar className="w-20 h-20">
                      <AvatarImage src="/vietnamese-user.png" alt="Profile" />
                      <AvatarFallback className="text-lg">H</AvatarFallback>
                    </Avatar>
                    <Button 
                      size="sm" 
                      className="absolute -bottom-2 -right-2 rounded-full w-8 h-8 p-0 bg-emerald-600 hover:bg-emerald-700"
                    >
                      <Camera className="w-4 h-4" />
                    </Button>
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center space-x-2 mb-2">
                      <Badge variant="secondary">Gi√°o vi√™n Piano</Badge>
                      <Badge className="bg-emerald-100 text-emerald-800">
                        <Star className="w-3 h-3 mr-1" />
                        4.9
                      </Badge>
                      {privacy.antiCommercialProfile && (
                        <Badge className="bg-blue-100 text-blue-700">
                          <Shield className="w-3 h-3 mr-1" />
                          Phi th∆∞∆°ng m·∫°i
                        </Badge>
                      )}
                    </div>
                    <p className="text-sm text-gray-600">
                      Tham gia t·ª´ th√°ng 3/2023 ‚Ä¢ 45 ƒë√°nh gi√° ‚Ä¢ 127 ng∆∞·ªùi ƒë√£ gi√∫p ƒë·ª°
                    </p>
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label htmlFor="name">H·ªç v√† t√™n</Label>
                    <Input
                      id="name"
                      value={profileData.name}
                      onChange={(e) => setProfileData({...profileData, name: e.target.value})}
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="email">Email</Label>
                    <Input
                      id="email"
                      type="email"
                      value={profileData.email}
                      onChange={(e) => setProfileData({...profileData, email: e.target.value})}
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i</Label>
                    <Input
                      id="phone"
                      value={profileData.phone}
                      onChange={(e) => setProfileData({...profileData, phone: e.target.value})}
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="ward">Ph∆∞·ªùng</Label>
                    <Input
                      id="ward"
                      value={profileData.ward}
                      onChange={(e) => setProfileData({...profileData, ward: e.target.value})}
                      placeholder="VD: Ph∆∞·ªùng B·∫øn Ngh√©"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="district">Qu·∫≠n/Huy·ªán</Label>
                    <Input
                      id="district"
                      value={profileData.district}
                      onChange={(e) => setProfileData({...profileData, district: e.target.value})}
                      placeholder="VD: Qu·∫≠n 1"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="city">Th√†nh ph·ªë</Label>
                    <Input
                      id="city"
                      value={profileData.city}
                      onChange={(e) => setProfileData({...profileData, city: e.target.value})}
                      placeholder="VD: TP.HCM"
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="bio">Gi·ªõi thi·ªáu b·∫£n th√¢n</Label>
                  <textarea
                    id="bio"
                    className="w-full h-20 px-3 py-2 border border-gray-200 rounded-md text-sm resize-none focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                    value={profileData.bio}
                    onChange={(e) => setProfileData({...profileData, bio: e.target.value})}
                    placeholder="M√¥ t·∫£ ng·∫Øn v·ªÅ k·ªπ nƒÉng, kinh nghi·ªám v√† c√°ch b·∫°n c√≥ th·ªÉ gi√∫p ƒë·ª° c·ªông ƒë·ªìng..."
                  />
                </div>
              </CardContent>
            </Card>

            {/* Privacy-First Location Settings */}
            <Card>
              <CardHeader>
                <div className="flex items-center space-x-2">
                  <MapPin className="w-5 h-5 text-emerald-600" />
                  <div>
                    <CardTitle>Quy·ªÅn ri√™ng t∆∞ v·ªã tr√≠</CardTitle>
                    <CardDescription>Ki·ªÉm so√°t ai c√≥ th·ªÉ xem v·ªã tr√≠ c·ªßa b·∫°n (thi·∫øt k·∫ø ri√™ng cho vƒÉn h√≥a Vi·ªát Nam)</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="p-4 bg-emerald-50 rounded-lg border border-emerald-200">
                  <h4 className="font-semibold text-emerald-800 mb-2 flex items-center gap-2">
                    <Shield className="w-4 h-4" />
                    B·∫£o v·ªá ri√™ng t∆∞ theo phong c√°ch Vi·ªát Nam
                  </h4>
                  <p className="text-sm text-emerald-700">
                    Ch·ªâ hi·ªÉn th·ªã ph∆∞·ªùng/qu·∫≠n theo m·∫∑c ƒë·ªãnh. ƒê·ªãa ch·ªâ ch√≠nh x√°c ch·ªâ ƒë∆∞·ª£c chia s·∫ª khi b·∫°n cho ph√©p c·ª• th·ªÉ t·ª´ng tr∆∞·ªùng h·ª£p.
                  </p>
                </div>

                <div className="space-y-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <Label className="text-sm font-medium">Hi·ªÉn th·ªã th√¥ng tin ph∆∞·ªùng</Label>
                      <p className="text-xs text-gray-500">Cho ph√©p hi·ªÉn th·ªã ph∆∞·ªùng v√† qu·∫≠n (lu√¥n an to√†n)</p>
                    </div>
                    <Switch
                      checked={privacy.showWardLocation}
                      onCheckedChange={(checked) => 
                        setPrivacy({...privacy, showWardLocation: checked})
                      }
                    />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <Label className="text-sm font-medium">Cho ph√©p chia s·∫ª ƒë·ªãa ch·ªâ ch√≠nh x√°c</Label>
                      <p className="text-xs text-gray-500">Ch·ªâ khi b·∫°n ƒë·ªìng √Ω cho t·ª´ng tr∆∞·ªùng h·ª£p c·ª• th·ªÉ</p>
                    </div>
                    <Switch
                      checked={privacy.allowExactLocation}
                      onCheckedChange={(checked) => 
                        setPrivacy({...privacy, allowExactLocation: checked})
                      }
                    />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <Label className="text-sm font-medium">X√°c minh qua h√†ng x√≥m</Label>
                      <p className="text-xs text-gray-500">Cho ph√©p h√†ng x√≥m x√°c minh b·∫°n l√† th√†nh vi√™n c·ªông ƒë·ªìng</p>
                    </div>
                    <Switch
                      checked={locationPrivacy.neighborVerification}
                      onCheckedChange={(checked) => 
                        setLocationPrivacy({...locationPrivacy, neighborVerification: checked})
                      }
                    />
                  </div>

                  <div className="space-y-2">
                    <Label>M·ª©c ƒë·ªô ri√™ng t∆∞ m·∫∑c ƒë·ªãnh</Label>
                    <Select 
                      value={locationPrivacy.defaultLevel} 
                      onValueChange={(value) => setLocationPrivacy({...locationPrivacy, defaultLevel: value})}
                    >
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="public_ward">C√¥ng khai ph∆∞·ªùng - An to√†n nh·∫•t</SelectItem>
                        <SelectItem value="neighbors_only">Ch·ªâ h√†ng x√≥m ƒë∆∞·ª£c x√°c minh</SelectItem>
                        <SelectItem value="family_friends">Gia ƒë√¨nh v√† b·∫°n b√®</SelectItem>
                        <SelectItem value="service_providers">Nh√† cung c·∫•p d·ªãch v·ª• (t·∫°m th·ªùi)</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Community Participation Settings */}
            <Card>
              <CardHeader>
                <div className="flex items-center space-x-2">
                  <Users className="w-5 h-5 text-emerald-600" />
                  <div>
                    <CardTitle>Tham gia c·ªông ƒë·ªìng</CardTitle>
                    <CardDescription>C√†i ƒë·∫∑t tham gia c√°c ho·∫°t ƒë·ªông c·ªông ƒë·ªìng v√† vƒÉn h√≥a Vi·ªát Nam</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">Tham gia s·ª± ki·ªán c·ªông ƒë·ªìng</Label>
                    <p className="text-xs text-gray-500">Nh·∫≠n th√¥ng b√°o v·ªÅ workshop, l·ªÖ h·ªôi, v√≤ng tr√≤n tr√†</p>
                  </div>
                  <Switch
                    checked={communitySettings.participateInEvents}
                    onCheckedChange={(checked) => 
                      setCommunitySettings({...communitySettings, participateInEvents: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">Chia s·∫ª th√¥ng tin ƒë·ªãa ph∆∞∆°ng</Label>
                    <p className="text-xs text-gray-500">G√≥p ph·∫ßn x√¢y d·ª±ng kho th√¥ng tin c·ªông ƒë·ªìng</p>
                  </div>
                  <Switch
                    checked={communitySettings.shareLocalIntelligence}
                    onCheckedChange={(checked) => 
                      setCommunitySettings({...communitySettings, shareLocalIntelligence: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">H∆∞·ªõng d·∫´n th√†nh vi√™n m·ªõi</Label>
                    <p className="text-xs text-gray-500">Gi√∫p ng∆∞·ªùi m·ªõi h√≤a nh·∫≠p v√†o c·ªông ƒë·ªìng</p>
                  </div>
                  <Switch
                    checked={communitySettings.mentorNewcomers}
                    onCheckedChange={(checked) => 
                      setCommunitySettings({...communitySettings, mentorNewcomers: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">Ho·∫°t ƒë·ªông vƒÉn h√≥a truy·ªÅn th·ªëng</Label>
                    <p className="text-xs text-gray-500">Tham gia l·ªÖ T·∫øt, l√†m b√°nh ch∆∞ng, ngh·ªÅ th·ªß c√¥ng</p>
                  </div>
                  <Switch
                    checked={communitySettings.culturalActivities}
                    onCheckedChange={(checked) => 
                      setCommunitySettings({...communitySettings, culturalActivities: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">Ph·∫£n ·ª©ng kh·∫©n c·∫•p</Label>
                    <p className="text-xs text-gray-500">S·∫µn s√†ng h·ªó tr·ª£ trong t√¨nh hu·ªëng kh·∫©n c·∫•p</p>
                  </div>
                  <Switch
                    checked={communitySettings.emergencyResponse}
                    onCheckedChange={(checked) => 
                      setCommunitySettings({...communitySettings, emergencyResponse: checked})
                    }
                  />
                </div>
              </CardContent>
            </Card>

            {/* Anti-Commercialization Settings */}
            <Card>
              <CardHeader>
                <div className="flex items-center space-x-2">
                  <Heart className="w-5 h-5 text-emerald-600" />
                  <div>
                    <CardTitle>Cam k·∫øt phi th∆∞∆°ng m·∫°i</CardTitle>
                    <CardDescription>X√¢y d·ª±ng m·ªëi quan h·ªá l√¢u d√†i thay v√¨ giao d·ªãch nhanh</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="p-4 bg-blue-50 rounded-lg border border-blue-200">
                  <h4 className="font-semibold text-blue-800 mb-2 flex items-center gap-2">
                    <Info className="w-4 h-4" />
                    Gi√° tr·ªã c·ªët l√µi SkillHub
                  </h4>
                  <p className="text-sm text-blue-700">
                    SkillHub ∆∞u ti√™n x√¢y d·ª±ng c·ªông ƒë·ªìng v√† m·ªëi quan h·ªá l√¢u d√†i. 
                    Ch√∫ng t√¥i kh√¥ng thu ph√≠ t·ª´ giao d·ªãch v√† kh√¥ng b√°n d·ªØ li·ªáu ng∆∞·ªùi d√πng.
                  </p>
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">H·ªì s∆° phi th∆∞∆°ng m·∫°i</Label>
                    <p className="text-xs text-gray-500">Hi·ªÉn th·ªã cam k·∫øt x√¢y d·ª±ng c·ªông ƒë·ªìng, kh√¥ng ch·ªâ kinh doanh</p>
                  </div>
                  <Switch
                    checked={privacy.antiCommercialProfile}
                    onCheckedChange={(checked) => 
                      setPrivacy({...privacy, antiCommercialProfile: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">Cam k·∫øt gi√° tr·ªã c·ªông ƒë·ªìng</Label>
                    <p className="text-xs text-gray-500">T√¥i ƒë·ªìng √Ω ∆∞u ti√™n gi√∫p ƒë·ª° l·∫´n nhau thay v√¨ l·ª£i nhu·∫≠n</p>
                  </div>
                  <Switch
                    checked={communitySettings.antiCommercialCommitment}
                    onCheckedChange={(checked) => 
                      setCommunitySettings({...communitySettings, antiCommercialCommitment: checked})
                    }
                  />
                </div>
              </CardContent>
            </Card>

            {/* Notification Settings */}
            <Card>
              <CardHeader>
                <div className="flex items-center space-x-2">
                  <Bell className="w-5 h-5 text-emerald-600" />
                  <div>
                    <CardTitle>Th√¥ng b√°o</CardTitle>
                    <CardDescription>Qu·∫£n l√Ω c√°ch b·∫°n nh·∫≠n th√¥ng b√°o v·ªÅ c·ªông ƒë·ªìng</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">Y√™u c·∫ßu d·ªãch v·ª•</Label>
                    <p className="text-xs text-gray-500">Khi c√≥ ng∆∞·ªùi c·∫ßn s·ª± gi√∫p ƒë·ª° c·ªßa b·∫°n</p>
                  </div>
                  <Switch
                    checked={notifications.serviceRequests}
                    onCheckedChange={(checked) => 
                      setNotifications({...notifications, serviceRequests: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">S·ª± ki·ªán c·ªông ƒë·ªìng</Label>
                    <p className="text-xs text-gray-500">Workshop, l·ªÖ h·ªôi, bu·ªïi giao l∆∞u trong khu ph·ªë</p>
                  </div>
                  <Switch
                    checked={notifications.communityEvents}
                    onCheckedChange={(checked) => 
                      setNotifications({...notifications, communityEvents: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">C·∫£nh b√°o kh·∫©n c·∫•p</Label>
                    <p className="text-xs text-gray-500">Th·ªùi ti·∫øt, an to√†n, th√¥ng tin quan tr·ªçng trong khu v·ª±c</p>
                  </div>
                  <Switch
                    checked={notifications.emergencyAlerts}
                    onCheckedChange={(checked) => 
                      setNotifications({...notifications, emergencyAlerts: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">Th√¥ng tin ƒë·ªãa ph∆∞∆°ng</Label>
                    <p className="text-xs text-gray-500">C·∫≠p nh·∫≠t gi√° c·∫£, giao th√¥ng, d·ªãch v·ª• m·ªõi</p>
                  </div>
                  <Switch
                    checked={notifications.localIntelligence}
                    onCheckedChange={(checked) => 
                      setNotifications({...notifications, localIntelligence: checked})
                    }
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label className="text-sm font-medium">Tin nh·∫Øn m·ªõi</Label>
                    <p className="text-xs text-gray-500">Th√¥ng b√°o khi c√≥ tin nh·∫Øn t·ª´ h√†ng x√≥m</p>
                  </div>
                  <Switch
                    checked={notifications.newMessages}
                    onCheckedChange={(checked) => 
                      setNotifications({...notifications, newMessages: checked})
                    }
                  />
                </div>
              </CardContent>
            </Card>

            {/* Account Security */}
            <Card>
              <CardHeader>
                <div className="flex items-center space-x-2">
                  <Lock className="w-5 h-5 text-emerald-600" />
                  <div>
                    <CardTitle>B·∫£o m·∫≠t t√†i kho·∫£n</CardTitle>
                    <CardDescription>Qu·∫£n l√Ω m·∫≠t kh·∫©u v√† b·∫£o m·∫≠t</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <Button variant="outline" className="w-full justify-start">
                  <Lock className="w-4 h-4 mr-2" />
                  ƒê·ªïi m·∫≠t kh·∫©u
                </Button>
                
                <Button variant="outline" className="w-full justify-start">
                  <Smartphone className="w-4 h-4 mr-2" />
                  X√°c th·ª±c hai y·∫øu t·ªë
                </Button>

                <Button variant="outline" className="w-full justify-start">
                  <Shield className="w-4 h-4 mr-2" />
                  Xem d·ªØ li·ªáu c√° nh√¢n
                </Button>

                <Separator />

                <div className="pt-4">
                  <h4 className="text-sm font-medium text-red-600 mb-2 flex items-center gap-2">
                    <AlertTriangle className="w-4 h-4" />
                    V√πng nguy hi·ªÉm
                  </h4>
                  <Button variant="destructive" className="w-full">
                    X√≥a t√†i kho·∫£n v√† d·ªØ li·ªáu
                  </Button>
                  <p className="text-xs text-gray-500 mt-2">
                    Thao t√°c n√†y kh√¥ng th·ªÉ ho√†n t√°c. T·∫•t c·∫£ d·ªØ li·ªáu v√† ƒë√≥ng g√≥p c·ªông ƒë·ªìng s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn.
                  </p>
                </div>
              </CardContent>
            </Card>

          </div>

          {/* Right Column - Community Champions & Stats */}
          <div className="space-y-6">
            
            {/* Community Champions Card */}
            <ReputationCard 
              points={currentUserPoints}
              badges={currentUserBadges}
              compact={false}
            />

            {/* Quick Actions */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">H√†nh ƒë·ªông nhanh</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <Button variant="outline" className="w-full justify-start">
                  <Crown className="w-4 h-4 mr-2" />
                  N√¢ng c·∫•p Premium
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  <Coffee className="w-4 h-4 mr-2" />
                  T·ªï ch·ª©c s·ª± ki·ªán
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  <Award className="w-4 h-4 mr-2" />
                  Xem huy hi·ªáu
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  <Users className="w-4 h-4 mr-2" />
                  K·∫øt n·ªëi h√†ng x√≥m
                </Button>
              </CardContent>
            </Card>

            {/* Vietnamese Community Values */}
            <Card className="bg-gradient-to-br from-emerald-50 to-emerald-100 border-emerald-200">
              <CardContent className="p-6">
                <h3 className="font-semibold text-emerald-800 mb-3 flex items-center gap-2">
                  <Heart className="w-5 h-5" />
                  Gi√° tr·ªã c·ªông ƒë·ªìng Vi·ªát Nam
                </h3>
                <div className="space-y-2 text-sm text-emerald-700">
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4" />
                    <span>T√¥n k√≠nh ng∆∞·ªùi l·ªõn tu·ªïi</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4" />
                    <span>Gi√∫p ƒë·ª° h√†ng x√≥m</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4" />
                    <span>Chia s·∫ª ki·∫øn th·ª©c</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4" />
                    <span>B·∫£o v·ªá c·ªông ƒë·ªìng</span>
                  </div>
                </div>
              </CardContent>
            </Card>

          </div>
        </div>

        {/* Save Button */}
        <div className="flex justify-end space-x-4 mt-8">
          <Button variant="outline">H·ªßy thay ƒë·ªïi</Button>
          <Button className="bg-emerald-600 hover:bg-emerald-700">
            <CheckCircle className="w-4 h-4 mr-2" />
            L∆∞u t·∫•t c·∫£ c√†i ƒë·∫∑t
          </Button>
        </div>
      </div>
    </div>
  )
}